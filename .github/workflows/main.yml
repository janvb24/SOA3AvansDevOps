name: SonarQube
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  Test:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Install the .NET Core SDK
      - name: Install .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      # Add MSBuild to the PATH
      - name: Setup MSBuild.exe
        uses: microsoft/setup-msbuild@v2

      # Run tests and collect code coverage
      - name: Run tests with code coverage
        run: |
          dotnet test --collect:"XPlat Code Coverage" --results-directory TestResults

      # Convert coverage report to opencover format
      - name: Convert coverage report to opencover format
        run: |
          foreach ($file in Get-ChildItem -Path TestResults -Filter "*.coverage") {
            $output = $file.FullName.Replace(".coverage", ".opencover.xml")
            & "C:\Program Files\dotnet\dotnet.exe" tool install --global dotnet-reportgenerator-globaltool
            & "C:\Users\runneradmin\.dotnet\tools\reportgenerator.exe" "-reports:$($file.FullName)" "-targetdir:TestResults" "-reporttypes:opencover"
          }

  SonarCloud:
    name: Analyze using SonarCloud
    needs: [Test]
    runs-on: windows-latest
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: ./.sonar/scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: |
          mkdir -p ./.sonar/scanner
          dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner

      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ./.sonar/scanner/dotnet-sonarscanner begin /k:"janvb24_SOA3AvansDevOps" /o:"janvb24" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.cs.opencover.reportsPaths="TestResults/*.opencover.xml"
          dotnet build
          ./.sonar/scanner/dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
